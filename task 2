import pandas as pd
import numpy as np
from sklearn import linear_model
from sklearn.model_selection import cross_val_score

df = pd.read_csv("train_features.csv")
for i in df.keys().values:
    mean = df[i].mean()
    df[i].fillna(mean, inplace = True)
    
test = pd.read_csv("test_features.csv")
for i in test.keys().values:
    mean = test[i].mean()
    test[i].fillna(mean, inplace = True)



y = pd.read_csv("train_labels.csv").values
y = y[:,12:]
d = y.shape[0]
X = np.zeros(shape=(d,12*37))

arr = df.to_numpy()

for i in range(0,d):
    m = 12*i
    for j in range(0,12):
        for t in range(0,37):
            s = 37*j
            X[i,s] = arr[m+j,t]

d_test = test.shape[0]

d_test = int(d_test/12)

X_test = np.zeros(shape=(d_test,12*37))

arr_test = df.to_numpy()

for i in range(0,d_test):
    m = 12*i
    for j in range(0,12):
        for t in range(0,37):
            s = 37*j
            X_test[i,s] = arr_test[m+j,t]





model = linear_model.Ridge(alpha = 0.1)
regression = model.fit(X,y)
Y_pred = regression.predict(X_test)
print(Y_pred)

def featureTrans(arrx):
    x1 = arrx[0]
    x2 = arrx[1]
    x3 = arrx[2]
    x4 = arrx[3]
    x5 = arrx[4]
    return [x1, x2, x3, x4, x5, 
            x1*x1, x2*x2, x3*x3, x4*x4, x5*x5, 
            np.exp(x1), np.exp(x2), np.exp(x3), np.exp(x4), np.exp(x5), 
            np.cos(x1), np.cos(x2), np.cos(x3), np.cos(x4), np.cos(x5), 1]
transX = [featureTrans(i) for i in X]
transX_test = [featureTrans(i) for i in X_test]
linreg = linear_model.LinearRegression(fit_intercept = True)
linreg.fit(transX,y)
Y_pred2 = linreg.predict(transX_test)
print(Y_pred2)

